<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        iIgCIiAIiIAiIgH/2Q==
</value>
  </data>
</root>